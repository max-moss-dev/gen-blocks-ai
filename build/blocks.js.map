{"version":3,"file":"blocks.js","mappings":"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","sources":["webpack://gen-blocks/external window [\"wp\",\"blockEditor\"]","webpack://gen-blocks/external window [\"wp\",\"components\"]","webpack://gen-blocks/external window [\"wp\",\"element\"]","webpack://gen-blocks/webpack/bootstrap","webpack://gen-blocks/webpack/runtime/compat get default export","webpack://gen-blocks/webpack/runtime/define property getters","webpack://gen-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://gen-blocks/webpack/runtime/make namespace object","webpack://gen-blocks/./src/blocks.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { \n    useBlockProps, \n    MediaPlaceholder,\n    RichText,\n    MediaUpload,\n    MediaUploadCheck,\n    __experimentalLinkControl as LinkControl,\n    InspectorControls\n} from '@wordpress/block-editor';\nimport { Button, Modal, Popover, PanelBody } from '@wordpress/components';\nimport { createElement, useState, Fragment } from '@wordpress/element';\n\nconst { registerBlockType } = wp.blocks;\n\nconst blocks = window.genbBlocks.blocks || [];\n\nblocks.forEach(block => {\n    registerBlockType(`gen-blocks/${block.name}`, {\n        title: block.metadata?.title || (block.name.charAt(0).toUpperCase() + block.name.slice(1)),\n        description: block.metadata?.description || '',\n        icon: block.metadata?.icon || 'block-default',\n        category: block.metadata?.category || 'gen-blocks',\n        attributes: block.attributes,\n        \n        edit: function(props) {\n            const { attributes, setAttributes } = props;\n            const blockProps = useBlockProps();\n\n            // Initialize template on first render\n            if (!attributes._template && block.template) {\n                setAttributes({ _template: block.template });\n            }\n\n            // Add inspector controls with edit link\n            const inspectorControls = createElement(InspectorControls, {},\n                createElement(PanelBody, { title: 'Block Settings' },\n                    createElement(Button, {\n                        variant: 'secondary',\n                        href: `${window.genbBlocks.adminUrl}admin.php?page=gen-blocks-edit&block=${block.name}`,\n                        target: '_blank',\n                        icon: 'edit',\n                        className: 'edit-block-button'\n                    }, 'Edit Block Template')\n                )\n            );\n\n            const renderEditable = (name, config) => {\n                if (!name || !config) {\n                    console.warn('Invalid config for editable field:', name, config);\n                    return null;\n                }\n\n                // Parse the template to get the element\n                const parser = new DOMParser();\n                const doc = parser.parseFromString(attributes._template, 'text/html');\n                const templateEl = doc.querySelector(`[zen-edit=\"${name}\"]`);\n\n                const commonProps = {\n                    key: name,\n                    identifier: name,\n                    value: (attributes[name] || '').trim(),\n                    onChange: (value) => {\n                        setAttributes({ [name]: value.trim() });\n                    },\n                    placeholder: config.default || `Enter ${name}...`,\n                    keepPlaceholderOnFocus: true\n                };\n\n                // Process zen-class if present\n                const zenClass = templateEl?.getAttribute('zen-class');\n                if (zenClass) {\n                    const processedClass = zenClass.replace(/\\{\\{(.+?)\\}\\}/g, (match, expr) => {\n                        if (expr.includes('?')) {\n                            const [condition, rest] = expr.split('?');\n                            const [trueVal, falseVal] = (rest || '').split(':');\n                            \n                            const conditionKey = (condition || '').trim();\n                            const trueValue = (trueVal || '').trim().replace(/['\"]/g, '');\n                            const falseValue = (falseVal || '').trim().replace(/['\"]/g, '');\n                            \n                            return attributes[conditionKey] === true ? trueValue : falseValue;\n                        }\n                        return attributes[expr.trim()] || '';\n                    });\n                    commonProps.className = `${commonProps.className} ${processedClass}`.trim();\n                }\n\n                // Get element type from template or config\n                const elementType = templateEl?.getAttribute('zen-type') || config.type_info;\n\n                switch(elementType) {\n                    case 'url': {\n                        const [isURLPickerOpen, setIsURLPickerOpen] = useState(false);\n                        \n                        // Get original classes from template element\n                        const templateClasses = templateEl?.className || '';\n                        const combinedClasses = [templateClasses, commonProps.className, `zen-${name}`]\n                            .filter(Boolean)\n                            .join(' ');\n\n                        // Get values from attributes\n                        const textValue = attributes[`${name}_text`] || attributes[name] || '';\n                        const urlValue = attributes[`${name}_url`] || '';\n                        const targetBlank = attributes[`${name}_target`] === '_blank';\n                        const rel = attributes[`${name}_rel`] || '';\n\n                        return createElement('div', {\n                            className: 'wp-block-gen-blocks-url-wrapper'\n                        }, [\n                            createElement('div', {\n                                className: 'block-editor-rich-text__container'\n                            }, [\n                                createElement(RichText, {\n                                    ...commonProps,\n                                    key: 'text',\n                                    tagName: 'a',\n                                    className: `block-editor-rich-text__editable ${combinedClasses}`,\n                                    value: textValue,\n                                    onChange: (value) => {\n                                        setAttributes({ \n                                            [`${name}_text`]: value,\n                                            [name]: value // Keep main attribute in sync\n                                        });\n                                    },\n                                    allowedFormats: ['core/bold', 'core/italic']\n                                }),\n                                createElement(Button, {\n                                    key: 'url-button',\n                                    icon: 'admin-links',\n                                    className: 'block-editor-rich-text__link-button',\n                                    onClick: () => setIsURLPickerOpen(true)\n                                })\n                            ]),\n                            isURLPickerOpen && createElement(Popover, {\n                                key: 'popover',\n                                position: 'bottom center',\n                                onClose: () => setIsURLPickerOpen(false),\n                                focusOnMount: 'firstElement'\n                            }, \n                                createElement('div', {\n                                    style: { padding: '12px', minWidth: '360px' }\n                                }, [\n                                    createElement(LinkControl, {\n                                        key: 'link-control',\n                                        value: {\n                                            url: urlValue,\n                                            opensInNewTab: targetBlank\n                                        },\n                                        onChange: ({ url, opensInNewTab }) => {\n                                            setAttributes({\n                                                [`${name}_url`]: url || '',\n                                                [`${name}_target`]: opensInNewTab ? '_blank' : '',\n                                                [`${name}_rel`]: opensInNewTab ? 'noopener noreferrer' : ''\n                                            });\n                                        },\n                                        settings: [\n                                            {\n                                                id: 'opensInNewTab',\n                                                title: 'Open in new tab'\n                                            }\n                                        ]\n                                    })\n                                ])\n                            )\n                        ]);\n                    }\n\n                    case 'image': {\n                        const [isModalOpen, setModalOpen] = useState(false);\n                        const imageUrl = attributes[name];\n\n                        if (!imageUrl) {\n                            return createElement(MediaPlaceholder, {\n                                key: name,\n                                labels: { \n                                    title: 'Add ' + name,\n                                    instructions: 'Upload or select image'\n                                },\n                                onSelect: (media) => {\n                                    setAttributes({ [name]: media.url });\n                                },\n                                accept: \"image/*\",\n                                allowedTypes: ['image']\n                            });\n                        }\n\n                        const element = document.createElement('div');\n                        element.innerHTML = block.template;\n                        const imgEl = element.querySelector(`[zen-edit=\"${name}\"]`);\n\n                        return createElement(Fragment, { key: name }, [\n                            createElement('img', {\n                                key: 'image',\n                                src: imageUrl,\n                                className: imgEl?.className || '',\n                                alt: imgEl?.getAttribute('alt'),\n                                width: imgEl?.getAttribute('width'),\n                                height: imgEl?.getAttribute('height'),\n                                onClick: () => setModalOpen(true),\n                                style: { cursor: 'pointer' }\n                            }),\n                            isModalOpen && createElement(Modal, {\n                                title: 'Edit image',\n                                onRequestClose: () => setModalOpen(false),\n                                className: 'zen-image-modal'\n                            }, [\n                                createElement('div', {\n                                    key: 'modal-content',\n                                    style: {\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        gap: '16px'\n                                    }\n                                }, [\n                                    createElement('div', {\n                                        key: 'preview',\n                                        className: 'zen-image-preview',\n                                        style: {\n                                            maxWidth: '400px',\n                                            margin: '0 auto'\n                                        }\n                                    }, \n                                        createElement('img', {\n                                            src: imageUrl,\n                                            alt: '',\n                                            style: {\n                                                width: '100%',\n                                                height: 'auto',\n                                                display: 'block',\n                                                borderRadius: '4px'\n                                            }\n                                        })\n                                    ),\n                                    createElement('div', {\n                                        key: 'buttons',\n                                        style: {\n                                            display: 'flex',\n                                            gap: '8px',\n                                            justifyContent: 'flex-end'\n                                        }\n                                    }, [\n                                        createElement(MediaUploadCheck, { key: 'upload-check' },\n                                            createElement(MediaUpload, {\n                                                onSelect: (media) => {\n                                                    setAttributes({ [name]: media.url });\n                                                    setModalOpen(false);\n                                                },\n                                                allowedTypes: ['image'],\n                                                render: ({ open }) => createElement(Button, {\n                                                    onClick: open,\n                                                    variant: 'secondary'\n                                                }, 'Replace')\n                                            })\n                                        ),\n                                        createElement(Button, {\n                                            key: 'remove',\n                                            variant: 'secondary',\n                                            isDestructive: true,\n                                            onClick: () => {\n                                                setAttributes({ [name]: '' });\n                                                setModalOpen(false);\n                                            }\n                                        }, 'Remove')\n                                    ])\n                                ])\n                            ])\n                        ]);\n                    }\n\n                    default:\n                        // Get original classes from template element\n                        const templateClasses = templateEl?.className || '';\n                        const combinedClasses = [templateClasses, commonProps.className, `zen-${name}`]\n                            .filter(Boolean)\n                            .join(' ');\n\n                        return createElement(RichText, {\n                            ...commonProps,\n                            tagName: templateEl?.tagName.toLowerCase() || 'span',\n                            className: combinedClasses\n                        });\n                }\n            };\n\n            const tempContainer = document.createElement('div');\n            tempContainer.innerHTML = attributes._template || block.template;\n\n            const replaceEditableElements = (node) => {\n                const elements = [];\n                \n                for (let child of node.children) {\n                    if (child.hasAttribute('zen-edit')) {\n                        const name = child.getAttribute('zen-edit');\n                        const config = block.attributes[name];\n                        if (!config) {\n                            console.warn(`No config found for editable field: ${name}`);\n                            continue;\n                        }\n                        \n                        const element = renderEditable(name, config);\n                        if (element) {\n                            elements.push(element);\n                        }\n                    } else {\n                        // Handle non-editable elements\n                        const tagName = child.tagName.toLowerCase();\n                        const props = {};\n\n                        // Copy attributes\n                        for (let attr of child.attributes) {\n                            let name = attr.name;\n                            let value = attr.value;\n\n                            // Convert class to className\n                            if (name === 'class') {\n                                name = 'className';\n                            }\n\n                            props[name] = value;\n                        }\n\n                        // Handle innerHTML for leaf nodes\n                        if (child.children.length === 0 && child.innerHTML) {\n                            props.dangerouslySetInnerHTML = { __html: child.innerHTML };\n                        }\n\n                        const element = createElement(\n                            tagName,\n                            props,\n                            child.children.length > 0 ? replaceEditableElements(child) : undefined\n                        );\n                        elements.push(element);\n                    }\n                }\n                \n                return elements;\n            };\n\n            const children = replaceEditableElements(tempContainer);\n            return createElement('div', blockProps, [\n                inspectorControls,\n                createElement('div', {}, children)\n            ]);\n        },\n\n        save: function() {\n            return null; // Use server-side rendering\n        }\n    });\n});\n\nconsole.log('GENB: Blocks data:', genbBlocks.blocks);"],"names":["useBlockProps","MediaPlaceholder","RichText","MediaUpload","MediaUploadCheck","__experimentalLinkControl","LinkControl","InspectorControls","Button","Modal","Popover","PanelBody","createElement","useState","Fragment","registerBlockType","wp","blocks","window","genbBlocks","forEach","block","name","title","metadata","charAt","toUpperCase","slice","description","icon","category","attributes","edit","props","setAttributes","blockProps","_template","template","inspectorControls","variant","href","adminUrl","target","className","renderEditable","config","console","warn","parser","DOMParser","doc","parseFromString","templateEl","querySelector","commonProps","key","identifier","value","trim","onChange","placeholder","default","keepPlaceholderOnFocus","zenClass","getAttribute","processedClass","replace","match","expr","includes","condition","rest","split","trueVal","falseVal","conditionKey","trueValue","falseValue","elementType","type_info","isURLPickerOpen","setIsURLPickerOpen","templateClasses","combinedClasses","filter","Boolean","join","textValue","urlValue","targetBlank","rel","tagName","allowedFormats","onClick","position","onClose","focusOnMount","style","padding","minWidth","url","opensInNewTab","settings","id","isModalOpen","setModalOpen","imageUrl","labels","instructions","onSelect","media","accept","allowedTypes","element","document","innerHTML","imgEl","src","alt","width","height","cursor","onRequestClose","display","flexDirection","gap","maxWidth","margin","borderRadius","justifyContent","render","open","isDestructive","toLowerCase","tempContainer","replaceEditableElements","node","elements","child","children","hasAttribute","push","attr","length","dangerouslySetInnerHTML","__html","undefined","save","log"],"sourceRoot":""}